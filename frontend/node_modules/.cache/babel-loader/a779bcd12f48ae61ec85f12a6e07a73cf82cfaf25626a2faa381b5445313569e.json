{"ast":null,"code":"var _jsxFileName = \"/home/varia/Desktop/project-cms/frontend/src/components/ContentList/ContentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './ContentList.module.css';\nimport { fetchData, updateData } from './utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContentList() {\n  _s();\n  const [contentItems, setContentItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingId, setEditingId] = useState(null);\n  const [newName, setNewName] = useState('');\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 3;\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = contentItems.slice(indexOfFirstItem, indexOfLastItem);\n  useEffect(() => {\n    fetchData().then(data => {\n      setContentItems(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n  const saveNameChange = async id => {\n    updateData(id, newName).then(updatedItem => {\n      setContentItems(prevItems => prevItems.map(item => item._id === id ? updatedItem : item));\n      setEditingId(null);\n      setNewName('');\n    }).catch(error => {\n      setError(error);\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Content List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: currentItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.listItem,\n        children: (() => {\n          if (editingId === item._id) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: newName,\n                onChange: handleNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.button,\n                onClick: () => saveNameChange(item._id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true);\n          } else {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.title,\n                onClick: () => {\n                  setEditingId(item._id);\n                  setNewName(item.name);\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.imageUrl,\n                alt: item.name,\n                className: styles.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true);\n          }\n        })()\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination,\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), contentItems.length > indexOfLastItem && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ContentList, \"R9Lw+kg5AE6eEuaBiB8QGik+76c=\");\n_c = ContentList;\nexport default ContentList;\nvar _c;\n$RefreshReg$(_c, \"ContentList\");","map":{"version":3,"names":["React","useState","useEffect","styles","fetchData","updateData","jsxDEV","_jsxDEV","Fragment","_Fragment","ContentList","_s","contentItems","setContentItems","loading","setLoading","error","setError","editingId","setEditingId","newName","setNewName","currentPage","setCurrentPage","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","then","data","catch","handleNameChange","e","target","value","saveNameChange","id","updatedItem","prevItems","map","item","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","container","list","listItem","onChange","button","onClick","title","name","description","src","imageUrl","alt","image","pagination","length","_c","$RefreshReg$"],"sources":["/home/varia/Desktop/project-cms/frontend/src/components/ContentList/ContentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './ContentList.module.css';\nimport { fetchData, updateData } from './utils/Api';\n\nfunction ContentList() {\n    const [contentItems, setContentItems] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [editingId, setEditingId] = useState(null);\n    const [newName, setNewName] = useState('');\n\n    // Pagination\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 3;\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = contentItems.slice(indexOfFirstItem, indexOfLastItem);\n\n\n    useEffect(() => {\n        fetchData()\n            .then(data => {\n                setContentItems(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            });\n    }, []);\n\n    const handleNameChange = (e) => {\n        setNewName(e.target.value);\n    }\n\n    const saveNameChange = async (id) => {\n        updateData(id, newName)\n            .then(updatedItem => {\n                setContentItems(prevItems => prevItems.map(item => item._id === id ? updatedItem : item));\n                setEditingId(null);\n                setNewName('');\n            })\n            .catch(error => {\n                setError(error);\n            });\n    }\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n    return (\n        <div className={styles.container}>\n            <h2>Content List</h2>\n            <ul className={styles.list}>\n                {currentItems.map(item => (\n                    <li key={item._id} className={styles.listItem}>\n                        {(() => {\n                            if (editingId === item._id) {\n                                return (\n                                    <>\n                                        <input value={newName} onChange={handleNameChange} />\n                                        <button className={styles.button} onClick={() => saveNameChange(item._id)}>Save</button>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        <h3 className={styles.title} onClick={() => {\n                                            setEditingId(item._id);\n                                            setNewName(item.name);\n                                        }}>\n                                            {item.name}\n                                        </h3>\n                                        <p>{item.description}</p>\n                                        <img src={item.imageUrl} alt={item.name} className={styles.image} />\n                                    </>\n                                );\n                            }\n                        })()}\n                    </li>\n                ))}\n            </ul>\n            <div className={styles.pagination}>\n                {currentPage > 1 && (\n                    <button onClick={() => setCurrentPage(currentPage - 1)}>Previous</button>\n                )}\n                {contentItems.length > indexOfLastItem && (\n                    <button onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n                )}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ContentList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}